// Generated by Dagger (https://google.github.io/dagger).
package com.demo.imagesearch.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

public final class ApiModule_ProvideLoggingInterceptorFactory
    implements Factory<HttpLoggingInterceptor> {
  private final ApiModule module;

  public ApiModule_ProvideLoggingInterceptorFactory(ApiModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return provideLoggingInterceptor(module);
  }

  public static ApiModule_ProvideLoggingInterceptorFactory create(ApiModule module) {
    return new ApiModule_ProvideLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor provideLoggingInterceptor(ApiModule instance) {
    return Preconditions.checkNotNull(
        instance.provideLoggingInterceptor(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
