// Generated by Dagger (https://google.github.io/dagger).
package com.demo.imagesearch.di;

import android.app.Application;
import com.demo.imagesearch.AppController;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideApplicationFactory implements Factory<Application> {
  private final AppModule module;

  private final Provider<AppController> applicationProvider;

  public AppModule_ProvideApplicationFactory(
      AppModule module, Provider<AppController> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Application get() {
    return provideApplication(module, applicationProvider.get());
  }

  public static AppModule_ProvideApplicationFactory create(
      AppModule module, Provider<AppController> applicationProvider) {
    return new AppModule_ProvideApplicationFactory(module, applicationProvider);
  }

  public static Application provideApplication(AppModule instance, AppController application) {
    return Preconditions.checkNotNull(
        instance.provideApplication(application),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
