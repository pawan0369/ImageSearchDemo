// Generated by Dagger (https://google.github.io/dagger).
package com.demo.imagesearch.di;

import com.demo.imagesearch.network.ApiInterface;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ApiModule_ProvideApiInterfaceFactory implements Factory<ApiInterface> {
  private final ApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ApiModule_ProvideApiInterfaceFactory(
      ApiModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ApiInterface get() {
    return provideApiInterface(module, retrofitProvider.get());
  }

  public static ApiModule_ProvideApiInterfaceFactory create(
      ApiModule module, Provider<Retrofit> retrofitProvider) {
    return new ApiModule_ProvideApiInterfaceFactory(module, retrofitProvider);
  }

  public static ApiInterface provideApiInterface(ApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideApiInterface(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
